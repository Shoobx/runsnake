clone_depth: 50

branches:
  only:
    - master
    - develop
    
# As config example taken this file: https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
environment:
  PYPI_USERNAME:
    secure: rl2zkdPpMWKuqh3paOKNhA==
  PYPI_PASSWORD:
    secure: rToy5D17/4zLIaIBq9S4UQ==
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\tests\\scripts\\appveyor\\run_with_env.cmd"
    TEST_CMD: "py.test --cov=./"

  matrix:
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

matrix:
  fast_finish: true

cache:
  # Cache downloaded pip packages.
  - "%LOCALAPPDATA%\\pip"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""
  - ps: |
      If ($env:PYTHON_ARCH -eq "32") {
        Invoke-Expression "SET VCVARSALL=x86"
      } Else {
        Invoke-Expression "SET VCVARSALL=x64"
      }

install:
  #- "choco install sonarcube-scanner"
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  ### Install the PyInsaller dependencies.
  # Upgrade to the latest pip.
  - "%CMD_IN_ENV% python -m pip install -U pip setuptools wheel"

  # Install the  test dependencies.
  - "%CMD_IN_ENV% pip install -U --disable-pip-version-check --timeout 5 --retries 2 -r tests/requirements.txt"

build_script:
  - "pip install ."

# test_script:
#  - "%CMD_IN_ENV% py.test"

on_success:
  - ps: |
      If ($env:APPVEYOR_REPO_TAG -eq "true") {
        choco install pandoc
        python setup.py sdist bdist_wheel
        Invoke-Expression "twine upload -u $env:PYPI_USERNAME -p $env:PYPI_PASSWORD --repository-url https://upload.pypi.org/legacy/ --skip-existing dist/*" 2>&1 | Out-Null
      }
  # Remove old or huge cache files to hopefully not exceed the 1GB cache limit.
  #
  # If the cache limit is reached, the cache will not be updated (of not even
  # created in the first run). So this is a trade of between keeping the cache
  # current and having a cache at all.
  # NB: This is done only `on_success` since the cache in uploaded only on
  # success anyway.
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -mtime +360 -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -size +10M -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -empty -delete
  # Show size of cache
  - C:\cygwin\bin\du -hs "%LOCALAPPDATA%\pip\Cache"

on_finish:
  - ps: ls -name -r | select-string -pattern ".*.whl" | %{appveyor PushArtifact $_} 
  # - codecov

  - ps: |
      (new-object net.webclient).UploadFile(
        "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)",
        (Resolve-Path .\junit-results.xml)
      )
      $LastExitCode = 0
  
